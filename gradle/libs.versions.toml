[versions]
jdk = "1.8.20"
kotlin = "1.9.0"
coroutine = "1.7.3"
zxing = "3.5.1"
junit = "5.9.2"
okHttp = "4.11.0"
mockk = "1.13.4"
retrofit = "2.9.0"
serialization_converter = "1.0.0"
gson = "2.8.9"
serialization = "1.6.0"
koin ="3.2.2"


[libraries]

stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "jdk" }
reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "jdk" }
coroutine = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutine" }
zxing = { module = "com.google.zxing:core", version.ref = "zxing" }
mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okHttp" }
junit-bom = { module = "org.junit:junit-bom", version.ref = "junit" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
coroutine-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutine" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
serialization-converter = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version.ref = "serialization_converter" }
okHttp-logging = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okHttp" }
okHttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okHttp" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
koin = { module = "io.insert-koin:koin-core", version.ref = "koin" }


[bundles]
test = ["junit-jupiter", "mockk", "coroutine-test"]